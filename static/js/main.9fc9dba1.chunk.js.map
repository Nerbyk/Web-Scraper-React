{"version":3,"sources":["components/Check.js","components/Provider.js","components/Scrape.js","components/Scrapping.js","components/Menu.js","components/ControlPanel.js","components/DataPanel.js","App.js","index.js"],"names":["Check","AppContext","createContext","useApp","useContext","AppProvider","children","useState","menuAlert","setMenuAlert","menuSpinner","setMenuSpinner","menuStep","setMenuStep","dataAlert","setDataAlert","dataSpinner","setDataSpinner","parsing","setParsing","parsingAlert","setParsingAlert","parsingLog","setParsingLog","searchResult","setSearchResult","Provider","value","Scrape","scraper_types","Object","keys","availableScrapers","type","name","category","sub_category","categories","get_categories","scraper","setScraper","handleSelect","e","target","id","prevState","useEffect","console","log","unwrap","url","title","axios","post","process","data_format","withCredentials","then","response","status","JSON","parse","data","catch","error","Promise","reject","Alert","variant","Form","FormGroup","as","Col","FormControl","defaultValue","onChange","key","map","names","sub_categories","Button","className","onClick","role","Scrapping","Spinner","animation","alert","Menu","handleButtonClick","sub_string","page","result","ControlPanel","DataPanel","search","setSearch","setPage","handleSubmit","preventDefault","onSubmit","Row","sm","Group","controlId","Control","placeholder","Text","Dropdown","Toggle","Item","label","i","Accordion","defaultActiveKey","Card","Header","default","eventKey","_source","price_without_vat","Collapse","Body","eshop","price_with_vat","tax","image_url","href","src","alt","format","length","App","Container","Jumbotron","class","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fc9dba1.chunk.js","sourcesContent":["import React from \"react\"\n\nexport const Check = () => {\n  \n  return (<div>Check</div>)\n}\n","import React, { createContext, useState, useContext } from \"react\"\n\nconst AppContext = createContext()\nexport const useApp = () => useContext(AppContext)\n\nexport const AppProvider = ({ children }) => {\n  const [menuAlert, setMenuAlert] = useState(false)\n  const [menuSpinner, setMenuSpinner] = useState(false)\n  const [menuStep, setMenuStep] = useState(\"menu\")\n  const [dataAlert, setDataAlert] = useState(false)\n  const [dataSpinner, setDataSpinner] = useState(false)\n  const [parsing, setParsing] = useState(false)\n  const [parsingAlert, setParsingAlert] = useState(false)\n  const [parsingLog, setParsingLog] = useState('')\n  const [searchResult, setSearchResult] = useState('')\n\n  return (\n    <AppContext.Provider\n      value={{\n        menuAlert,\n        setMenuAlert,\n        menuSpinner,\n        setMenuSpinner,\n        menuStep,\n        setMenuStep,\n        dataAlert,\n        setDataAlert,\n        dataSpinner,\n        setDataSpinner,\n        parsing,\n        setParsing,\n        parsingAlert,\n        setParsingAlert,\n        parsingLog, setParsingLog,\n        searchResult, setSearchResult,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n","import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\"\nimport {\n  Button,\n  Col,\n  Form,\n  FormControl,\n  FormGroup,\n  Alert,\n} from \"react-bootstrap\"\nimport availableScrapers from \"../data/scrapers.json\"\nimport { useApp } from \"./Provider\"\n\nexport const Scrape = () => {\n  const scraper_types = Object.keys(availableScrapers)\n  const [scraper, setScraper] = useState({\n    type: \"\",\n    name: \"\",\n    category: \"\",\n    sub_category: \"\",\n    categories: \"\",\n    get_categories: false,\n  })\n  const {\n    menuAlert,\n    setMenuAlert,\n    setParsing,\n    menuSpinner,\n    setMenuSpinner,\n    setMenuStep,\n    setParsingLog,\n    setParsingAlert\n  } = useApp()\n\n  const handleSelect = (e) => {\n    const { value, id } = e.target\n    if (value === \"default\") {\n      setScraper((prevState) => ({\n        ...prevState,\n        [id]: \"\",\n      }))\n      if (id === \"name\") {\n        setScraper((prevState) => ({\n          ...prevState,\n          categories: \"\",\n        }))\n      }\n      return\n    }\n    setScraper((prevState) => ({\n      ...prevState,\n      [id]: value,\n    }))\n  }\n\n  useEffect(() => {\n    console.log(scraper)\n    if (scraper.type && scraper.name && !scraper.categories) {\n      setScraper((prevState) => ({\n        ...prevState,\n        get_categories: true,\n      }))\n    }\n  }, [scraper.name, scraper.type, scraper.categories])\n  \n  const unwrap = ({ url, title }) => ({ url, title })\n  const handleButtonClick = (e) => {\n    setMenuStep(\"scrapping\")\n    setParsing(true)\n    axios\n      .post(\n        process.env.REACT_APP_API_URL + '/parse',\n        {\n            type: scraper.type,\n            name: scraper.name,\n            data_format: process.env.REACT_APP_DATA_FORMAT,\n            category: unwrap(scraper.categories[scraper.category]),\n            sub_category: scraper.sub_category ? unwrap(scraper.categories[scraper.category].sub_categories[scraper.sub_category]) : ''\n        },\n        {withCredentials: true}\n      )\n      .then(response => {\n        setParsing(false)\n        setParsingAlert(false)\n        console.log(response)\n        if(response.status == 200){\n          setMenuStep('scrapping')\n          setParsingLog(response.data.log)\n\n        } else {\n          setMenuStep('scrapping')\n          setMenuAlert(true)\n        }\n      })\n  }\n  if (scraper.get_categories) {\n    setScraper((prevState) => ({\n      ...prevState,\n      get_categories: false,\n    }))\n    setMenuSpinner(true)\n    axios\n      .post(\n        process.env.REACT_APP_API_URL + \"/categories\",\n        {\n          type: scraper.type,\n          name: scraper.name,\n          data_format: process.env.REACT_APP_DATA_FORMAT,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        console.log(response)\n        if (response.status == 200) {\n          setScraper((prevState) => ({\n            ...prevState,\n            categories: JSON.parse(response.data.categories),\n          }))\n          setMenuSpinner(false)\n        } else {\n          setMenuAlert(true)\n        }\n      })\n      .catch((error) => Promise.reject(error))\n  }\n\n  return (\n    <div>\n      <h3>New Web Scrape</h3>\n      {menuAlert && (\n        <Alert variant='warning'> Something went wrong, Reload page and try again!</Alert>\n      )}\n      <Form>\n        <FormGroup as={Col}>\n          Choose type of web site\n          <FormControl\n            as=\"select\"\n            defaultValue=\"default\"\n            onChange={handleSelect}\n            id=\"type\"\n          >\n            <option value=\"default\" key=\"default\">\n              Choose\n            </option>\n            {scraper_types.map((data) => {\n              const title = availableScrapers[data].title\n              return (\n                <option value={data} key={title}>\n                  {title}\n                </option>\n              )\n            })}\n          </FormControl>\n        </FormGroup>\n        {scraper.type && (\n          <FormGroup as={Col}>\n            Choose Name of web site\n            <FormControl\n              as=\"select\"\n              defaultValue=\"default\"\n              onChange={handleSelect}\n              id=\"name\"\n            >\n              <option value=\"default\" key=\"default\">\n                Choose\n              </option>\n              {availableScrapers[scraper.type].names.map((data) => {\n                return (\n                  <option value={data} key={data}>\n                    {data}\n                  </option>\n                )\n              })}\n            </FormControl>\n          </FormGroup>\n        )}\n        {scraper.categories && (\n          <FormGroup as={Col}>\n            Choose category of products\n            <FormControl\n              as=\"select\"\n              defaultValue=\"default\"\n              onChange={handleSelect}\n              id=\"category\"\n            >\n              <option value=\"default\" key=\"default\">\n                Choose\n              </option>\n              {Object.keys(scraper.categories).map((category) => (\n                <option value={category} key={category}>\n                  {category}\n                </option>\n              ))}\n            </FormControl>\n          </FormGroup>\n        )}\n        {scraper.category && (\n          <FormGroup as={Col}>\n            Choose sub category (Optional)\n            <FormControl\n              as=\"select\"\n              defaultValue=\"default\"\n              onChange={handleSelect}\n              id=\"sub_category\"\n            >\n              <option value=\"default\" key=\"default\">\n                Choose\n              </option>\n              {Object.keys(\n                scraper.categories[scraper.category].sub_categories\n              ).map((category) => (\n                <option value={category} key={category}>\n                  {category}\n                </option>\n              ))}\n            </FormControl>\n            <Button\n              variant=\"outline-success btn-block\"\n              className=\"mt-4\"\n              onClick={handleButtonClick}\n            >\n              Scrape!\n            </Button>\n          </FormGroup>\n        )}\n        {menuSpinner && (\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        )}\n      </Form>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Button, Spinner } from \"react-bootstrap\"\nimport { useApp } from \"./Provider\"\n\nexport const Scrapping = () => {\n  const { setMenuStep, parsing, setParsingAlert, parsingLog } = useApp()\n  const handleClick = () => {\n    setMenuStep(\"menu\")\n    setParsingAlert(true)\n  }\n  return (\n    <>\n      {parsing && \n      <>\n      <h2>Scrapping pages...</h2>\n      <Spinner className=\"mt-3\" animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n      \n      <Button\n        variant=\"outline-primary btn-block\"\n        className=\"mt-4\"\n        onClick={handleClick}\n      >\n        Go To Menu((Scrapping will proceed at background))\n      </Button>\n      </>}\n      {!parsing && \n      <>\n        <h2>Scrapping Succeed</h2>\n        <Button variant=\"outline-success btn-block\" onClick={() => alert(parsingLog)}>Check Scrapping Status</Button>\n        <Button variant=\"outline-primary btn-block\" onClick={() => setMenuStep('menu')}>Go To Menu</Button>\n      </>}\n    </>\n  )\n}\n","import axios from \"axios\"\nimport React, { useState } from \"react\"\nimport { Button } from \"react-bootstrap\"\nimport { Check } from \"./Check\"\nimport { useApp } from \"./Provider\"\nimport { Scrape } from \"./Scrape\"\nimport { Scrapping } from \"./Scrapping\"\n\nexport const Menu = () => {\n  const { menuStep, setMenuStep, setSearchResult} = useApp()\n\n  const handleButtonClick = (e) => {\n    const { id } = e.target\n    switch (id) {\n      case \"new\":\n        setMenuStep(\"scrape\")\n        break\n      case \"existing\":\n        setMenuStep(\"check\")\n        break\n      case \"scrapping\":\n        setMenuStep(\"scrapping\")\n        break\n      default:\n        alert(\"Button doesn't exist\")\n    }\n  }\n\n  const handleShowData = () => {\n    axios\n    .post(\n      process.env.REACT_APP_API_URL + \"/search\",\n      {\n        data_format: process.env.REACT_APP_DATA_FORMAT, \n        sub_string: '', \n        page: 1\n      },\n      { withCredentials: true }\n    )\n    .then((response) => {\n      if(response.status == 200){\n        setSearchResult(response.data.result)\n      } else {\n        \n      }\n    })\n    .catch((error) => Promise.reject(error))\n  }\n  if (menuStep === \"scrape\") {\n    return <Scrape />\n  } else if (menuStep === \"check\") {\n    return <Check />\n  } else if (menuStep === \"scrapping\") {\n    return <Scrapping />\n  }\n\n  return (\n    <>\n      <h3>Menu</h3>\n      <Button\n        id=\"new\"\n        variant=\"outline-success btn-block\"\n        onClick={handleButtonClick}\n      >\n        Scrape New Data\n      </Button>\n      <Button\n        id=\"existing\"\n        variant=\"outline-primary btn-block\"\n        onClick={handleShowData}\n      >\n        Show All Scraped Data\n      </Button>\n      <Button\n        id=\"delete\"\n        variant=\"outline-warning btn-block\"\n        onClick={handleButtonClick}\n      >\n        Clear Data Base\n      </Button>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Container, Jumbotron } from \"react-bootstrap\"\nimport { Menu } from \"./Menu\"\n\nexport const ControlPanel = () => {\n  return (\n    <div className=\"menu\">\n      <Menu />\n    </div>\n  )\n}\n","import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\"\nimport { Accordion, Button, Card, Col, Dropdown, Form, Row } from \"react-bootstrap\"\nimport availableScrapers from \"../data/scrapers.json\"\nimport { useApp } from \"./Provider\"\n\nexport const DataPanel = () => {\n  const scraper_types = Object.keys(availableScrapers)\n  console.log(scraper_types)\n  const [search, setSearch] = useState('')\n  const {searchResult, setSearchResult} = useApp('')\n  const [page, setPage] = useState(1)\n  \n  const handleSubmit = (e = '') => {\n    if(e) e.preventDefault()\n\n    axios\n    .post(\n      process.env.REACT_APP_API_URL + \"/search\",\n      {\n        data_format: process.env.REACT_APP_DATA_FORMAT, \n        sub_string: search,\n        page: page,\n      },\n      { withCredentials: true }\n    )\n    .then((response) => {\n      if(response.status == 200){\n        setSearchResult(response.data.result)\n      } else {\n        \n      }\n    })\n    .catch((error) => Promise.reject(error))\n\n  }\n\n  const format = (data) => {\n    const {id, eshop, title, category, sub_category, price_without_vat, price_with_vat, tax, url, image_url} = data._source\n    \n    return (\n      <p>\n        <span><b>id: </b>{id}</span><br></br>\n        <span><b>E-Shop: </b>{`${eshop}`}</span><br></br>\n        <span><b>category: </b>{category}</span><br></br>\n        <span><b>Sub category: </b>{sub_category}</span><br></br>\n        <span><b>Price With Vat: </b>{price_with_vat}</span><br></br>\n        <span><b>Price Without Vat: </b>{price_without_vat}</span><br></br>\n        <span><b>Tax: </b>{tax}</span><br></br>\n        <span><b>Link: </b><a href={url}>Link</a></span><br></br>\n        <img src={image_url} alt={title}></img><br></br>\n      </p>\n    )\n  }\n  \n  const goNext = () => {\n    setPage(prevState => prevState + 1)\n  }\n\n  const goPrevious = () => {\n    setPage(prevState => prevState - 1)\n  }\n\n  useEffect(() => {\n    if(page > 1)\n      handleSubmit()\n    \n    if(searchResult == 0)\n      setSearchResult('')\n  }, [page])\n  return (\n    <div className=\"pt-1\">\n      <h2>Data</h2>\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col sm={10}>\n        <Form.Group controlId=\"formBasicEmail\">\n        <Form.Control type=\"text\" placeholder=\"Search\" onChange= {(e) => setSearch(e.target.value)}/>\n        <Form.Text className=\"text-muted\">\n          Search by product Name\n        </Form.Text>\n        </Form.Group>\n          </Col><Col sm={2}>\n          <Dropdown>\n      <Dropdown.Toggle variant=\"success btn-block\" id=\"dropdown-basic\">\n        Filter\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        <Dropdown.Item>\n        Select Name:\n          <select>\n            {scraper_types.map(type =>{\n              return(\n               <optgroup label={type}>{type}\n               {availableScrapers[type].names.map( name => <option>{name}</option>)}\n               </optgroup>)})}\n          </select>\n        </Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n          </Col>\n        </Row>\n      </Form>\n      {searchResult && \n      searchResult.map((data, i) => {\n        console.log(data, i)\n        return (\n          <Accordion defaultActiveKey=\"1\">\n        <Card key={i+1}>\n          <Card.Header default>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey={i+1}>\n              {`${data._source.title} - ${data._source.price_without_vat} CZK (Click to open)`}\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey={i+1}>\n            <Card.Body>\n             {format(data)}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        </Accordion>\n        )\n      })\n      }\n      {page > 1 && \n        <Button onClick={goPrevious} id='previous' className='mt-1'>Previous</Button>\n      }\n      {searchResult.length != 0 && \n        <Button onClick={goNext} id='next' className=\"mt-1\">Next</Button>\n      }\n     \n    </div>\n  )\n}\n","import React from \"react\"\nimport { Alert, Col, Container, Jumbotron, Row, Spinner } from \"react-bootstrap\"\nimport { ControlPanel } from \"./components/ControlPanel\"\nimport { DataPanel } from \"./components/DataPanel\"\nimport { useApp } from \"./components/Provider\"\n\nfunction App() {\n  const {parsingAlert} = useApp()\n  return (\n    <div className=\"App\">\n      <div className=\"page-content\">\n      {parsingAlert &&\n        <Alert variant=\"secondary\" className=\"scrapping-alert\">\n        <Spinner animation=\"border\" role=\"status\" />\n         <span className=\"ml-1\">Scrapping in progress...</span>\n        </Alert>}\n      <Row className=\"justify-content-center\">\n        <Col sm={4}>\n          <Container>\n            <Jumbotron className=\"p-2 text-center\">\n              <ControlPanel />\n            </Jumbotron>\n          </Container>\n        </Col>\n        <Col sm={8}>\n          <Container>\n            <Jumbotron className=\"pt-2\">\n              <DataPanel />\n            </Jumbotron>\n          </Container>\n        </Col>\n      </Row>\n      </div>\n      <footer className=\"py-4 bg-dark text-white-50\">\n        <div class=\"container text-center inner\">\n          <small>Warning: This Application was designed for one person use. Concurrent use by several clients is not provided</small>\n        </div>\n      </footer>\n    </div>\n    \n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.scss\"\nimport App from \"./App\"\nimport { AppProvider } from \"./components/Provider\"\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}